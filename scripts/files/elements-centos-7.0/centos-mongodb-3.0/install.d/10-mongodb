#!/bin/sh

# CONTEXT: GUEST during CONSTRUCTION as ROOT
# PURPOSE: Install controller base required packages

set -e
set -o xtrace

cat > "/etc/rc.local" << _EOF_
# Make sure to disable Linux kernel feature transparent huge pages,
# it will affect greatly both memory usage and latency in a negative way.
# See: http://docs.mongodb.org/manual/tutorial/transparent-huge-pages/
if test -f /sys/kernel/mm/redhat_transparent_hugepage/defrag; then
  echo never > /sys/kernel/mm/redhat_transparent_hugepage/defrag
fi
if test -f /sys/kernel/mm/redhat_transparent_hugepage/enabled; then
  echo never > /sys/kernel/mm/redhat_transparent_hugepage/enabled
fi

exit \$?

_EOF_

cat <<EOL > /etc/yum.repos.d/mongodb.repo
[mongodb-org-3.0]
name=MongoDB 3.0 Repository
baseurl=http://repo.mongodb.org/yum/redhat/7/mongodb-org/3.0/x86_64/
gpgcheck=0
enabled=1
EOL

yum -y install -y mongodb-org-3.0.2 mongodb-org-server-3.0.2 mongodb-org-shell-3.0.2 mongodb-org-mongos-3.0.2 mongodb-org-tools-3.0.2

echo "exclude=mongodb-org,mongodb-org-server,mongodb-org-shell,mongodb-org-mongos,mongodb-org-tools" >> /etc/yum.conf

# DBAAS-238 - workaround issues in the shipped /etc/init.d/mongod
sed -i -e "s;^\(#\s*\)\?PIDFILE[ \t]*=.*;PIDFILE=\`awk -F=  '/^pidfilepath\\\s*=\\\s*/{gsub(/^[ \\t]+/, \"\", \$2)\; print \$2}' \"\$CONFIGFILE\"\`;" /etc/init.d/mongod
sed -i -e "s/.*init.d\/functions.*/SYSTEMCTL_SKIP_REDIRECT=true\n&/" /etc/init.d/mongod
echo "d /var/run/mongodb 0755 mongod mongod" > /lib/tmpfiles.d/mongodb.conf
sed -i -e "s;^\(#\s*\)\?dbpath[ \t]*=.*;dbpath = /var/lib/mongodb;" /etc/mongod.conf
sed -i -e "s;^\(#\s*\)\?logpath[ \t]*=.*;logpath = /var/log/mongodb;" /etc/mongod.conf
[ -d "/var/lib/mongo" ] && mv /var/lib/mongo /var/lib/mongodb
[ -d "/var/log/mongo" ] && mv /var/log/mongo /var/log/mongodb

# the following config changes are needed: smallfiles set to true, and bind_ip
# set to default
sed -i '/bind_ip/d' /etc/mongod.conf
sed -i '/smallfiles/d' /etc/mongod.conf
echo 'smallfiles = true' >> /etc/mongod.conf

chkconfig mongod on

# create the mongos init.d script
cat <<'EOF' > /etc/init.d/mongos
#!/bin/bash

# mongos - Startup script for mongos

# chkconfig: 35 85 15
# description: Mongo sharding query router
# processname: mongos
# config: /etc/mongos.conf
# pidfile: /var/run/mongodb/mongod.pid

. /etc/rc.d/init.d/functions

CONFIGFILE="/etc/mongod.conf"
OPTIONS=" -f $CONFIGFILE"
SYSCONFIG="/etc/sysconfig/mongod"

PIDFILEPATH=`awk -F'[:=]' -v IGNORECASE=1 '/^[[:blank:]]*(processManagement\.)?pidfilepath[[:blank:]]*[:=][[:blank:]]*/{print $2}' "$CONFIGFILE" | tr -d "[:blank:]\"'"`

mongos=${MONGOS-/usr/bin/mongos}

MONGO_USER=mongod
MONGO_GROUP=mongod

if [ -f "$SYSCONFIG" ]; then
    . "$SYSCONFIG"
fi

PIDDIR=`dirname $PIDFILEPATH`

# Handle NUMA access to CPUs (SERVER-3574)
# This verifies the existence of numactl as well as testing that the command works
NUMACTL_ARGS="--interleave=all"
if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
then
    NUMACTL="numactl $NUMACTL_ARGS"
else
    NUMACTL=""
fi

start()
{
  # Make sure the default pidfile directory exists
  if [ ! -d $PIDDIR ]; then
    install -d -m 0755 -o $MONGO_USER -g $MONGO_GROUP $PIDDIR
  fi

  # Recommended ulimit values for mongod or mongos
  # See http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings
  #
  ulimit -f unlimited
  ulimit -t unlimited
  ulimit -v unlimited
  ulimit -n 64000
  ulimit -m unlimited
  ulimit -u 32000

  echo -n $"Starting mongos: "
  daemon --user "$MONGO_USER" --check $mongos "$NUMACTL $mongos $OPTIONS >/dev/null 2>&1"
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch /var/lock/subsys/mongos
}

stop()
{
  echo -n $"Stopping mongos: "
  mongo_killproc "$PIDFILEPATH" $mongos
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/mongos
}

restart () {
        stop
        start
}

# Send TERM signal to process and wait up to 300 seconds for process to go away.
# If process is still alive after 300 seconds, send KILL signal.
SYSTEMCTL_SKIP_REDIRECT=true
# Built-in killproc() (found in /etc/init.d/functions) is on certain versions of Linux
# where it sleeps for the full $delay seconds if process does not respond fast enough to
# the initial TERM signal.
mongo_killproc()
{
  local pid_file=$1
  local procname=$2
  local -i delay=300
  local -i duration=10
  local pid=`pidofproc -p "${pid_file}" ${procname}`

  kill -TERM $pid >/dev/null 2>&1
  usleep 100000
  local -i x=0
  while [ $x -le $delay ] && checkpid $pid; do
    sleep $duration
    x=$(( $x + $duration))
  done

  kill -KILL $pid >/dev/null 2>&1
  usleep 100000

  rm -f "${pid_file}"

  checkpid $pid
  local RC=$?
  [ "$RC" -eq 0 ] && failure "${procname} shutdown" || success "${procname} shutdown"
  RC=$((! $RC))
  return $RC
}

RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f /var/lock/subsys/mongos ] && restart || :
    ;;
  status)
    status $mongos
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL
EOF

chmod 755 /etc/init.d/mongos
